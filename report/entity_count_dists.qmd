# Entity Count Distributions

```{python}
#| label: set-up
import sys
import os
import matplotlib.pyplot as plt
import seaborn as sns

sys.path.append(os.getcwd())
sys.path.append(os.path.dirname(os.getcwd()))

import scripts.cons as cons
from scripts.utilities.gen_random_poisson_power import gen_random_poisson_power

data_model_poisson_params = {
    'user':{'lambda':20, 'power':1}, 
    'device':{'lambda':0.2, 'power':2}, 
    'card':{'lambda':0.1, 'power':2}, 
    'ip':{'lambda':1.3, 'power':2}, 
    'application':{'lambda':1, 'power':2}, 
    'transaction':{'lambda':5, 'power':2}
    }

def distplot(data, bins='auto'):
    """
    """
    # set plot size and style
    sns.set(rc={'figure.figsize':(7, 7), "lines.linewidth": 0.7})
    sns.set_style("white")
    displot = sns.histplot(data=data, bins=bins)
```

# Device

The count of used devices per userid.

```{python}
#| label: device-count-per-userid
device_poisson_params = data_model_poisson_params['device']
device_cnts_per_user = gen_random_poisson_power(lam=device_poisson_params['lambda'], size=1000, power=device_poisson_params['power'])
distplot(data=device_cnts_per_user)

```

# Card

The count of used cards per userid.

```{python}
#| label: card-count-per-userid
card_poisson_params = data_model_poisson_params['card']
card_cnts_per_user = gen_random_poisson_power(lam=card_poisson_params['lambda'], size=1000, power=card_poisson_params['power'])
distplot(data=card_cnts_per_user)
```

# IP

The count of used IPs per userid.

```{python}
#| label: ip-count-per-userid
ip_poisson_params = data_model_poisson_params['ip']
ip_cnts_per_user = gen_random_poisson_power(lam=ip_poisson_params['lambda'], size=1000, power=ip_poisson_params['power'])
distplot(data=ip_cnts_per_user)
```

# Application

The count of applications per userid.

```{python}
#| label: application-count-per-userid
app_poisson_params = data_model_poisson_params['application']
app_cnts_per_user = gen_random_poisson_power(lam=app_poisson_params['lambda'], size=1000, power=app_poisson_params['power'])
distplot(data=app_cnts_per_user)
```

# Transaction

The count of transactions per userid.

```{python}
#| label: transaction-count-per-userid
trans_poisson_params = data_model_poisson_params['transaction']
trans_cnts_per_user = gen_random_poisson_power(lam=trans_poisson_params['lambda'], size=1000, power=trans_poisson_params['power'])
distplot(data=trans_cnts_per_user)
```