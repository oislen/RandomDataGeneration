
```{python}
#| label: set-up
import os
import numpy as np
import pandas as pd
import os
import sys

sys.path.append(os.getcwd())
sys.path.append(os.path.dirname(os.getcwd()))

import scripts.cons as cons
```

# Data Load

```{python}
#| label: data-load
# load random telecom payments data
user_feat_foath = os.path.join('..', 'data', 'report', 'user_feat_data.csv')
feat_data = pd.read_csv(user_feat_foath)
feat_data.head()
```

# Customer Value Score

Percentile score / rank the users across each week number based on their successful transaction count, and amount total.

```{python}
#| label: score-data
def week_pct_score(group, score_cols = ['successful_size','successful_sum']):
    """
    """
    # percentile rank the score columns
    group_score = group[score_cols].rank(method='average', ascending=True, pct=True, axis=0)
    group_score.columns = group_score.columns + '_pct'
    # join score results back to groups
    group_results = group.join(group_score)
    return group_results

# score each user across each week for their percentile score in number of successfull transactions counts and acounts
score_data_week = feat_data.groupby(by=['transaction_week'], group_keys=False).apply(lambda group: week_pct_score(group))
# aggregate across dataset to find most valueable users
agg_dict={'successful_size':'sum', 'successful_sum':'sum', 'successful_size_pct':'sum', 'successful_sum_pct':'sum'}
score_data_total = score_data_week.groupby(by=['userid']).agg(agg_dict)
# calcualte the customer value score
score_data_total['customer_value_score'] = score_data_total[['successful_size_pct', 'successful_sum_pct']].mean(axis=1)
# order results by the customer value score
score_data_total = score_data_total.sort_values(by=['customer_value_score'], ascending=False)
score_data_total.head()
```

# High Value Users

Identify the high value users as the customers with a customer value score in the top 10%. Calculate transaction stats of the high value users.

```{python}
#| label: high-value-users
# create the high value user identifier
score_data_total['customer_value_score_pct'] = score_data_total['customer_value_score'].rank(method='average', ascending=True, pct=True, axis=0)
score_data_total['high_value_user'] = (score_data_total['customer_value_score_pct'] >= 0.9).astype(int)
# sum across the 
groupby_col=['high_value_user']
agg_dict={'successful_size':'sum', 'successful_sum':'sum', 'successful_size_pct':'mean', 'successful_sum_pct':'mean', 'customer_value_score':'mean', 'customer_value_score_pct':'mean'}
high_value_data = score_data_total.groupby(by=groupby_col).agg(agg_dict)
high_value_data
```